library(recogito)
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("annotations", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious_annotations(input$annotations)
})
}
shinyApp(ui, server)
txt <- "Josh went to the bakery in Brussels.\nWhat an adventure!"
x   <- recogito(inputId = "annotations", txt)
x
x   <- recogito(inputId = "annotations", txt, type = "tags",
tags = c("LOCATION", "TIME", "PERSON"))
x
?plotOutput
?textOutput
help(package = flexdashboard)
help(package = recogito)
library(recogito)
library(recogito)
library(shiny)
library(recogito)
txt <- "Josh went to the bakery in Brussels.\nWhat an adventure!"
ui <- fluidPage(recogitoOutput(outputId = "annotation_text"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$annotation_text <- renderRecogitotagsonly({
recogito("annotations", text = txt, tags = c("LOCATION", "TIME", "PERSON"))
})
output$annotation_result <- renderPrint({
if(length(input$annotations) > 0){
x <- read_recogito_annotations(input$annotations)
x
}
})
}
shinyApp(ui, server)
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
library(magick)
img <- image_read(url)
img
library(magick)
img <- image_read(url)
allrectangles <- Map(
x      = anno$x,
y      = anno$y,
width  = anno$width,
height = anno$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
allrectangles <- do.call(c, allrectangles)
allrectangles
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:41,249.5234375,371,245"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#58f0096c-4675-4ea8-9f38-bffce0887ab8"
},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:46,5.523437976837158,371,239.99999952316284"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#50035dda-c62b-4f30-bf95-1879d60288a5"}]'
anno <- read_annotorious_annotations(x, src = url)
anno
library(magick)
img <- image_read(url)
allrectangles <- Map(
x      = anno$x,
y      = anno$y,
width  = anno$width,
height = anno$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
allrectangles <- do.call(c, allrectangles)
allrectangles
area <- head(anno, n = 1)
library(magick)
img  <- image_read(url)
area <- head(anno, n = 1)
image_crop(img, geometry_area(x = area$x, y = area$y,
width = area$width, height = area$height))
allrectangles <- Map(
x      = anno$x,
y      = anno$y,
width  = anno$width,
height = anno$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
allrectangles <- do.call(c, allrectangles)
allrectangles
library(opencv)
ocv_polygon
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:43,244.5234375,362,252"
}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#4eaa8788-0c7e-42d2-b004-4d66b57018a1"},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"SvgSelector",
"value":"<svg>
<polygon points=\\\"75,4 75,58 32,95 32,194 410,195 391,70 373,63 368,3 222,1.5\\\">
</polygon></svg>"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#8bf0a557-c847-4a07-91bc-68a98c499615"}]'
x    <- gsub(x, pattern = "\n", replacement = "")
anno <- read_annotorious_annotations(x, src = url)
anno
anno$polygon
ocv_read(url)
library(magick)
img  <- image_read(url)
area <- head(anno, n = 1)
image_crop(img, geometry_area(x = area$x, y = area$y,
width = area$width, height = area$height))
area <- anno
allrectangles <- Map(
x      = area$x,
y      = area$y,
width  = area$width,
height = area$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:41,249.5234375,371,245"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#58f0096c-4675-4ea8-9f38-bffce0887ab8"
},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:46,5.523437976837158,371,239.99999952316284"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#50035dda-c62b-4f30-bf95-1879d60288a5"}]'
anno <- read_annotorious_annotations(x, src = url)
anno
library(magick)
img  <- image_read(url)
area <- head(anno, n = 1)
image_crop(img, geometry_area(x = area$x, y = area$y,
width = area$width, height = area$height))
area <- anno
allrectangles <- Map(
x      = area$x,
y      = area$y,
width  = area$width,
height = area$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
allrectangles <- do.call(c, allrectangles)
allrectangles
anno
area <- subset(anno, type == "RECTANGLE")
allrectangles <- Map(
x      = area$x,
y      = area$y,
width  = area$width,
height = area$height,
f = function(x, y, width, height){
image_crop(img, geometry_area(x = x, y = y, width = width, height = height))
})
allrectangles <- do.call(c, allrectangles)
allrectangles
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:43,244.5234375,362,252"
}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#4eaa8788-0c7e-42d2-b004-4d66b57018a1"},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"SvgSelector",
"value":"<svg>
<polygon points=\\\"75,4 75,58 32,95 32,194 410,195 391,70 373,63 368,3 222,1.5\\\">
</polygon></svg>"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#8bf0a557-c847-4a07-91bc-68a98c499615"}]'
x    <- gsub(x, pattern = "\n", replacement = "")
anno <- read_annotorious_annotations(x, src = url)
anno
area <- subset(anno, type == "POLYGON")
area
img  <- ocv_read(url)
img
?ocv_polygon
ocv_polygon(area, pts = area$polygon[[1]])
library(opencv)
img  <- ocv_read(url)
area <- subset(anno, type == "POLYGON")
ocv_polygon(img, pts = area$polygon[[1]])
ocv_polygon(img, pts = area$polygon[[1]])
library(opencv)
img  <- ocv_read(url)
area <- subset(anno, type == "POLYGON")
area <- head(area, n = 1)
ocv_polygon(img, pts = area$polygon)
area$polygon
library(opencv)
img  <- ocv_read(url)
area <- subset(anno, type == "POLYGON")
ocv_polygon(img, pts = area$polygon[[1]])
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
url
library(recogito)
src <- https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg
x   <- annotorious(src = src)
x
library(recogito)
src <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
x   <- annotorious(src = src)
x
?annotorious
library(recogito)
src <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
x   <- annotorious(src = src, tags = c("IMAGE", "TEXT"))
x
?annotorious
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui  <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("results", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious_annotations(input$results)
})
}
shinyApp(ui, server)
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("annotations", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious_annotations(input$annotations)
})
}
shinyApp(ui, server)
library(recogito)
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("annotations", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
#read_annotorious_annotations(input$annotations)
input$annotations
})
}
shinyApp(ui, server)
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
x <- jsonlite::fromJSON(x, simplifyVector = FALSE, simplifyDataFrame = FALSE, simplifyMatrix = FALSE, flatten = FALSE)
label   <- lapply(x, FUN = function(x) do.call(rbind, lapply(x$body, FUN=function(x) data.frame(value = x$value, purpose = x$purpose))))
tags    <- lapply(label, FUN = function(x) x$value[x$purpose %in% "tagging"])
comment <- lapply(label, FUN = function(x) x$value[x$purpose %in% "commenting"])
tags
comment
x$target
str(x)
sapply(x, FUN = function(x) x$target[[1]]$value)
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
x <- jsonlite::fromJSON(x, simplifyVector = FALSE, simplifyDataFrame = FALSE, simplifyMatrix = FALSE, flatten = FALSE)
label   <- lapply(x, FUN = function(x) do.call(rbind, lapply(x$body, FUN=function(x) data.frame(value = x$value, purpose = x$purpose))))
tags    <- lapply(label, FUN = function(x) x$value[x$purpose %in% "tagging"])
comment <- lapply(label, FUN = function(x) x$value[x$purpose %in% "commenting"])
x <- data.frame(id = sapply(x, FUN = function(x) x$id),
type = sapply(x, FUN = function(x){
x <- x$target[[1]]$value
ifelse(grepl(x, pattern = "xywh=pixel"), "RECTANGLE",
ifelse(grepl(x, pattern = "polygon points"), "POLYGON", NA))
}),
label = I(label),
comment = I(comment),
content = sapply(x, FUN = function(x) x$target[[1]]$value), stringsAsFactors = FALSE)
x
library(shiny)
library(recogito)
tagset    <- c("IMAGE", "TEXT")
url <- "https://www.w3schools.com/images/picture.jpg"
#annotorious(src = url)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
#annotorious(src = url)
ui <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("annotations", tags = tagset, src = url)
})
output$annotation_result <- renderPrint({
print(input$annotations)
})
}
shinyApp(ui, server)
library(recogito)
library(recogito)
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui  <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("results", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious(input$results)
})
}
shinyApp(ui, server)
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:41,249.5234375,371,245"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#58f0096c-4675-4ea8-9f38-bffce0887ab8"
},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:46,5.523437976837158,371,239.99999952316284"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#50035dda-c62b-4f30-bf95-1879d60288a5"}]'
anno <- read_annotorious(x, src = url)
anno
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
x <- '[
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"IMAGE","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:41,249.5234375,371,245"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#58f0096c-4675-4ea8-9f38-bffce0887ab8"
},
{
"type":"Annotation",
"body":[{"type":"TextualBody","value":"TEXT","purpose":"tagging"}],
"target":{"selector":{
"type":"FragmentSelector",
"conformsTo":"http://www.w3.org/TR/media-frags/",
"value":"xywh=pixel:46,5.523437976837158,371,239.99999952316284"}},
"@context":"http://www.w3.org/ns/anno.jsonld",
"id":"#50035dda-c62b-4f30-bf95-1879d60288a5"}]'
anno <- read_annotorious(x, src = url)
anno
anno
anno$label
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
anno <- read_annotorious(x, src = url)
anno
anno$label
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
x <- jsonlite::fromJSON(x, simplifyVector = FALSE, simplifyDataFrame = FALSE, simplifyMatrix = FALSE, flatten = FALSE)
str(x)
label   <- lapply(x, FUN = function(x) do.call(rbind, lapply(x$body, FUN=function(x) data.frame(value = x$value, purpose = x$purpose))))
label
lapply(label, FUN = function(x) x$value[x$purpose %in% "tagging"])
lapply(label, FUN = function(x) x$value[x$purpose %in% "commenting"])
label   <- lapply(x, FUN = function(x) do.call(rbind, lapply(x$body, FUN=function(x) data.frame(value = x$value, purpose = x$purpose))))
tags    <- lapply(label, FUN = function(x) x$value[x$purpose %in% "tagging"])
comment <- lapply(label, FUN = function(x) x$value[x$purpose %in% "commenting"])
x <- data.frame(id = sapply(x, FUN = function(x) x$id),
type = sapply(x, FUN = function(x){
x <- x$target[[1]]$value
ifelse(grepl(x, pattern = "xywh=pixel"), "RECTANGLE",
ifelse(grepl(x, pattern = "polygon points"), "POLYGON", NA))
}),
label = I(label),
comment = I(comment),
content = sapply(x, FUN = function(x) x$target[[1]]$value), stringsAsFactors = FALSE)
x
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
url <- paste("https://upload.wikimedia.org/",
"wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg",
sep = "")
anno <- read_annotorious(x, src = url)
anno
anno
x$label
anno$label
x <- "[{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"IMAGE\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"sdfsdfsd\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"FragmentSelector\",\"conformsTo\":\"http://www.w3.org/TR/media-frags/\",\"value\":\"xywh=pixel:43,243.5234375,369,255\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#5b4efb39-6f5f-4828-be22-4e678aa985e1\"},{\"type\":\"Annotation\",\"body\":[{\"type\":\"TextualBody\",\"value\":\"TEXT\",\"purpose\":\"tagging\"},{\"type\":\"TextualBody\",\"value\":\"waw\",\"purpose\":\"commenting\"}],\"target\":{\"selector\":{\"type\":\"SvgSelector\",\"value\":\"<svg><polygon points=\\\"73,8.523438453674316 27,199.5234375 410,208.5234375 405,4.523437976837158\\\"></polygon></svg>\"}},\"@context\":\"http://www.w3.org/ns/anno.jsonld\",\"id\":\"#a20ea257-4a31-40af-b95e-99f4c6e438a2\"}]"
anno <- read_annotorious(x, src = url)
library(recogito)
anno
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui  <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("results", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious(input$results)
})
}
shinyApp(ui, server)
library(shiny)
library(recogito)
url <- "https://upload.wikimedia.org/wikipedia/commons/a/a0/Pamphlet_dutch_tulipomania_1637.jpg"
ui  <- fluidPage(annotoriousOutput(outputId = "anno"),
tags$hr(),
tags$h3("Results"),
verbatimTextOutput(outputId = "annotation_result"))
server <- function(input, output) {
output$anno <- renderAnnotorious({
annotorious("results", tags = c("IMAGE", "TEXT"), src = url)
})
output$annotation_result <- renderPrint({
read_annotorious(input$results)
})
}
shinyApp(ui, server)
